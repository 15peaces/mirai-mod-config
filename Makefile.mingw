# use with: mingw32-make -f Makefile.mingw


# -- CHANGE THESE SETTINGS ACCORDING TO YOUR ENVIRONMENT ----------------------

# change this line to point to your wxLua install directory
WXLUA_PATH = ../../wxLua-2.8.12.3-Lua-5.1.5-MSW-Ansi

# -- END OF SETTINGS. NO NEED TO CHANGE ANYTHING BELOW THIS LINE --------------


VERSION = 0.0.1

# Directories created by this makefile:
# contains the final executable and readme files:
BUILD_DIR   = build
# contains archives with the contents of the build directory (7z and zip):
RELEASE_DIR = release
# contains automatically generated source files:
GEN_DIR     = gen
# contains intermediate files created during the build process:
TEMP_DIR    = _temp


TXT2LUA         = tools/txt2lua.lua
WXLUAFREEZE     = $(WXLUA_PATH)/apps/wxluafreeze/wxluafreeze.lua
WXLUAFREEZE_APP = $(WXLUA_PATH)/bin/wxLuaFreeze.exe
LUA             = $(WXLUA_PATH)/bin/lua.exe
LUAC            = $(WXLUA_PATH)/bin/luac.exe


LUA_FILES        = main.lua
SQUISH_OUTPUT    = $(TEMP_DIR)/config_sq.lua
COMPILED_OUTPUT  = $(TEMP_DIR)/config_sq_comp.lua

APP_NAME         = config.exe
ARCHIVE_BASENAME = mirai-mod-config_v$(VERSION)

#TODO: uncomment the line below after writing rules for archive files
#release: $(RELEASE_DIR)/$(ARCHIVE_BASENAME).7z $(RELEASE_DIR)/$(ARCHIVE_BASENAME).zip

build: $(BUILD_DIR)/$(APP_NAME)

generate: $(GEN_DIR)/orig_Config.lua


# TODO: rules for archive files


$(BUILD_DIR)/$(APP_NAME): $(COMPILED_OUTPUT)
	if not exist $(BUILD_DIR) mkdir $(BUILD_DIR)
	$(LUA) $(WXLUAFREEZE) $(WXLUAFREEZE_APP) $< $(BUILD_DIR)/$(APP_NAME)


$(COMPILED_OUTPUT): $(SQUISH_OUTPUT)
	$(LUAC) -o $(COMPILED_OUTPUT) $(SQUISH_OUTPUT)


$(SQUISH_OUTPUT): squishy $(SOURCE_FILES) $(GEN_DIR)/orig_Config.lua
	if not exist $(TEMP_DIR) mkdir $(TEMP_DIR)
	squish


$(GEN_DIR)/orig_Config.lua: data/Config.lua
	if not exist $(GEN_DIR) mkdir $(GEN_DIR)
	$(LUA) $(TXT2LUA) data/Config.lua $(GEN_DIR)/orig_Config.lua


clean:
	-rmdir /S/Q $(BUILD_DIR)
	-rmdir /S/Q $(RELEASE_DIR)
	-rmdir /S/Q $(GEN_DIR)
	-rmdir /S/Q $(TEMP_DIR)


.PHONY: release build generate clean
